Pages:
  bookpage: int
    - primary key
  booktext: text
    - not null
    - Double quotes are stored as $ to avoid syntax clashes
  title: char(100)
  kill_prox: int
    - abs(kill_prox) => 0-10, how close to a kill the story is
    - sign indicates before (+) or after (-)
  mode: char(30)
  tense: char(30)
  true_page: int
  killer_id: int => People
  victim_id: int => People
  narrator_id: int => People

Groups:
  id: int
    - primary key
  name: char(30)
    - not null

People:
  id: int
    - primary key
  name: char(30)
    - not null
  victim: bool
  killer: bool
  narrator: bool

Nicknames:
  id: int
    - primary key
  name: char(30)
    - not null
  person_id: int => People

Locations:
  id: int
    - primary key
  name: char(50)
    - not null
  level: char(30)

Times:
  id: int
    - primary key
  name: char(50)
    - not null
  level: char(30)

Notes:
  id: int
    - primary key
  object: char(20)
    - not null
    - example - "group" for a note on a group
  note_text: text
    - not null
  object_id: int => Groups/Pages/People/Locations/Times
    - not null

Relations:
  - meaning - group one comes chronologically before group two
  id: int
    - primary key
  group_id1: int => Groups
    - not null
  group_id2: int => Groups
    - not null

Groups_Pages:
  id: int
    - primary key
  group_id: int => Groups
    - not null
  page_number: int => Pages
    - not null

Pages_People:
  id: int
    - primary key
  page_number: int => Pages
    - not null
  person_number: int => People
    - not null

Pages_Locations:
  id: int
    - primary key
  page_number: int => Pages
    - not null
  location_id: int => Locations
    - not null

Pages_Times:
  id: int
    - primary key
  page_number: int => Pages
    - not null
  time_id: int => Times
    - not null
